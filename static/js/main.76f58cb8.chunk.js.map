{"version":3,"sources":["Input.js","Buttons.js","Item.js","List.js","App.js","index.js"],"names":["Input","state","disabled","name","valid","handleChange","e","target","value","length","setState","handleSubmit","preventDefault","addItem","props","id","uuid","this","onSubmit","className","onChange","placeholder","type","Component","Buttons","handleDeleteClick","handleDoneClick","handleEditClick","onClick","Item","item","deleteItem","updateItem","List","list","map","index","key","App","complete","randomPerson","updatedList","filter","itm","handleRandomClick","listLength","counter","interval","setInterval","console","log","randomNumber","Math","floor","random","clearInterval","itemIndex","findIndex","toUpperCase","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.76f58cb8.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { v4 as uuid } from 'uuid'\n\nclass Input extends Component {\n    state = {\n        disabled: false,\n        name: '',\n        valid: true\n    }\n\n    handleChange = e => {\n        // destructure event\n        const {\n            name,\n            value\n        } = e.target\n\n        // check for valid input\n        if (value.length === 0) {\n            this.setState({\n                disabled: true,\n                valid: false\n            })\n        } else {\n            this.setState({\n                disabled: false,\n                valid: true\n            })\n        }\n\n        // update state\n        this.setState({ [name]: value })\n    }\n\n    handleSubmit = e => {\n        // prevent page reload\n        e.preventDefault()\n\n        // destructure state\n        const { name } = this.state\n\n        // check for valid input\n        if (name.length === 0) {\n            // update state\n            this.setState({\n                disabled: true,\n                valid: false\n            })\n\n            // return early\n            return\n        } else {\n            // update state\n            this.setState({\n                disabled: false,\n                valid: true\n            })\n        }\n\n        // destructure props\n        const { addItem } = this.props\n\n        // generate unique id\n        const id = uuid()\n\n        // create new item object\n        const item = {\n            id,\n            name\n        }\n\n        // add item to list\n        addItem(item)\n\n        // reset state\n        this.setState({ name: '' })\n    }\n\n    render() {\n        // destructure state\n        const {\n            disabled,\n            name,\n            valid\n        } = this.state\n\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <div className=\"input-field\" >\n                    <div className=\"col s8\">\n                        <input\n                            className={valid ? 'valid': 'invalid'}\n                            name=\"name\"\n                            onChange={this.handleChange}\n                            placeholder={valid ? 'Name': 'Name is required'}\n                            type=\"text\"\n                            value={name}\n                        />\n                    </div>\n                    <div className=\"center-align col s4\">\n                        <button className=\"btn blue\" disabled={disabled} type=\"submit\">\n                            <i className=\"material-icons\">add</i>\n                        </button>\n                    </div>\n                </div>\n            </form>\n        )\n    }\n}\n\nexport default Input\n","import React from 'react'\n\nfunction Buttons(props) {\n    // destructure props\n    const {\n        disabled,\n        handleDeleteClick,\n        handleDoneClick,\n        handleEditClick\n    } = props\n\n    if (disabled) {\n        return (\n            <div>\n                <button className=\"btn-floating btn-small amber\" onClick={handleEditClick}>\n                    <i className=\"material-icons\">edit</i>\n                </button>\n                <button className=\"btn-floating btn-small deep-orange\" onClick={handleDeleteClick}>\n                    <i className=\"material-icons\">delete</i>\n                </button>\n            </div>\n        )\n    } return (\n        <button className=\"btn-floating btn-small green\" onClick={handleDoneClick}>\n            <i className=\"material-icons\">done</i>\n        </button>\n    )\n}\n\nexport default Buttons\n","import React, { Component } from 'react'\n\nimport Buttons from './Buttons'\n\nclass Item extends Component {\n    state = {\n        disabled: true,\n        name: this.props.item.name,\n        valid: true\n    }\n\n    handleChange = e => {\n        // destructure event\n        const {\n            name,\n            value\n        } = e.target\n\n        // check for valid input\n        if (value.length === 0) {\n            this.setState({ valid: false })\n        } else {\n            this.setState({ valid: true })\n        }\n\n        // update state\n        this.setState({ [name]: value })\n    }\n\n    handleDeleteClick = () => {\n        // destructure props\n        const {\n            deleteItem,\n            item\n        } = this.props\n\n        // delete item from list\n        deleteItem(item)\n    }\n\n    handleDoneClick = () => {\n        // destructure state\n        const { name } = this.state\n\n        // check for valid input\n        if (name.length === 0) {\n            // update state\n            this.setState({ valid: false })\n\n            // return early\n            return\n        } else {\n            // update state\n            this.setState({ valid: true })\n        }\n\n        // destructure props\n        const {\n            item,\n            updateItem\n        } = this.props\n\n        // create updated item object\n        const updatedItem = {\n            ...item,\n            name\n        }\n\n        // update item in list\n        updateItem(updatedItem)\n\n        // reset state\n        this.setState({\n            disabled: true,\n            valid: true\n        })\n    }\n\n    handleEditClick = () => {\n        // update state\n        this.setState({ disabled: false })\n    }\n\n    render() {\n        // destructure state\n        const {\n            disabled,\n            name,\n            valid\n        } = this.state\n\n        return (\n            <div className=\"input-field\" >\n                <div className=\"col s8\">\n                    <input\n                        className={valid ? 'valid' : 'invalid'}\n                        disabled={disabled}\n                        name=\"name\"\n                        onChange={this.handleChange}\n                        placeholder={valid ? 'Name' : 'Name is required'}\n                        type=\"text\"\n                        value={name}\n                    />\n                </div>\n                <div className=\"center-align col s4\">\n                    <Buttons\n                        disabled={disabled}\n                        handleDeleteClick={this.handleDeleteClick}\n                        handleDoneClick={this.handleDoneClick}\n                        handleEditClick={this.handleEditClick}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Item\n","import React from 'react'\n\nimport Item from './Item'\n\nconst List = (props) => {\n    // destructure props\n    const {\n        deleteItem,\n        list,\n        updateItem\n    } = props\n\n    return (\n        <div>\n            {list && list.map((item, index) => {\n                return (\n                    <Item\n                        deleteItem={deleteItem}\n                        item={item}\n                        key={index}\n                        updateItem={updateItem}\n                    />\n                )\n            })}\n        </div>\n    )\n}\n\nexport default List\n","import React, { Component } from 'react';\n\nimport Input from './Input'\nimport List from './List'\n\nimport './styles.css'\n\nclass App extends Component {\n\tstate = {\n\t\tcomplete: false,\n\t\tdisabled: false,\n\t\tlist: [],\n\t\trandomPerson: {}\n\t}\n\n\t// add item to list\n\taddItem = item => {\n\t\t// destructure state\n\t\tconst { list } = this.state\n\n\t\t// update state\n\t\tthis.setState({ list: [...list, item] })\n\t}\n\n\t// delete item from list\n\tdeleteItem = item => {\n\t\t// destructure state\n\t\tconst { list } = this.state\n\n\t\t// filter item from list\n\t\tconst updatedList = list.filter(itm => itm.id !== item.id)\n\n\t\t// update state\n\t\tthis.setState({ list: updatedList })\n\t}\n\n\thandleRandomClick = () => {\n\t\t// update state\n\t\tthis.setState({\n\t\t\tcomplete: false,\n\t\t\tdisabled: true\n\t\t})\n\n\t\t// destructure state\n\t\tconst { list } = this.state\n\n\t\t// get list length\n\t\tconst listLength = list.length\n\n\t\t// create counter variable\n\t\tlet counter = 25\n\n\t\tconst interval = setInterval(() => {\n\t\t\tconsole.log(counter)\n\t\t\tcounter--\n\n\t\t\tif (counter > 0) {\n\t\t\t\t// get a random number\n\t\t\t\tconst randomNumber = Math.floor(Math.random() * listLength)\n\n\t\t\t\t// access corresponding list index position\n\t\t\t\tconst randomPerson = list[randomNumber]\n\n\t\t\t\t// update state\n\t\t\t\tthis.setState({ randomPerson })\n\t\t\t} else {\n\n\t\t\t\t// The code here will run when\n\t\t\t\t// the timer has reached zero.\n\n\t\t\t\tclearInterval(interval)\n\t\t\t\tconsole.log('Ding!')\n\n\t\t\t\t// update state\n\t\t\t\tthis.setState({\n\t\t\t\t\tcomplete: true,\n\t\t\t\t\tdisabled: false\n\t\t\t\t})\n\t\t\t}\n\t\t}, 50)\n\t}\n\n\t// update list item\n\tupdateItem = item => {\n\t\t// destructure state\n\t\tconst { list } = this.state\n\n\t\t// find index of item in list\n\t\tconst itemIndex = list.findIndex(itm => itm.id === item.id)\n\n\t\t// update item in list\n\t\tlist[itemIndex] = item\n\n\t\t// update state\n\t\tthis.setState({ list })\n\t}\n\n\trender() {\n\t\t// destructure state\n\t\tconst {\n\t\t\tcomplete,\n\t\t\tdisabled,\n\t\t\tlist,\n\t\t\trandomPerson\n\t\t} = this.state\n\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col s12 m6\">\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\taddItem={this.addItem}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<List\n\t\t\t\t\t\t\t\tdeleteItem={this.deleteItem}\n\t\t\t\t\t\t\t\tlist={list}\n\t\t\t\t\t\t\t\tupdateItem={this.updateItem}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<div className=\"center-align col s12\">\n\t\t\t\t\t\t\t\t<button className=\"btn-large purple\" disabled={disabled} onClick={this.handleRandomClick}>\n\t\t\t\t\t\t\t\t\tSelect Random Person\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={`col s12 m6 center-align selected-item ${complete ? 'complete' : null}`}>\n\t\t\t\t\t\t{randomPerson.name && randomPerson.name.toUpperCase()}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}